#  docker-compose.yml
version: '3.8'

services:
  my-sql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_DATABASE: users_microservice_db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - my-network

  eureka-server:
    build:
      context: ./eureka-server-dame
    image: eureka-server-image
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_APPLICATION_NAME: eureka-server-dame
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
    networks:
      - my-network

#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    restart: unless-stopped
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  users-microservice:
    build:
      context: ./users-microservice
    image: users-microservice-image
    container_name: users-microservice
    depends_on:
      - my-sql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://my-sql:3306/users_microservice_db
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      EUREKA_SERVER_HOST: eureka-server
    ports:
      - "8082:8082"
    networks:
      - my-network

  tasks-microservice:
    build:
      context: ./tasks-microservice
    image: tasks-microservice-image
    container_name: tasks-microservice
    depends_on:
      - my-sql
      - eureka-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://my-sql:3306/users_microservice_db
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      EUREKA_SERVER_HOST: eureka-server
    ports:
      - "8081:8081"
    networks:
      - my-network

  api-gateway:
    build:
      context: ./api-gateway
    image: api-gateway-image
    container_name: api-gateway
    depends_on:
      - eureka-server
      - users-microservice
      - tasks-microservice
    ports:
      - "8080:8080"
    networks:
      - my-network
    environment:
      EUREKA_SERVER_HOST: eureka-server

volumes:
  mysqldata:

networks:
  my-network:
    driver: bridge

